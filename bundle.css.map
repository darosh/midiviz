{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\App.svelte",
    "..\\src\\Note.svelte",
    "..\\src\\Control.svelte"
  ],
  "sourcesContent": [
    "<script>\nimport { initMidi, NOTE_OFF, NOTE_ON, PITCH_BEND } from './midi'\nimport Notes from './Notes.svelte'\nimport Controls from './Controls.svelte'\nimport { eventId } from './events'\nimport { palette } from './config'\nimport { paletteControls } from './config'\n\nlet width\nlet current\nlet last = 0\nlet order = 0\n\nlet messages = []\nconst notesMap = {}\nconst controlsMap = {}\nlet logs = []\n\ninitMidi(inputHandler, logHandler)\n\nfunction logHandler (message) {\n  logs = [...logs, message]\n}\n\nfunction raf () {\n  return new Promise(resolve => requestAnimationFrame(resolve))\n}\n\nasync function inputHandler (event) {\n  await raf()\n  const id = eventId(event)\n  messages = [...messages, { event, id }]\n  const number = event.controller ? event.controller.number : event.note ? event.note.number : -1\n  const value = event.type === PITCH_BEND ? 127 * (event.value + 1) / 2 : event.value !== undefined ? event.value : event.rawVelocity !== undefined ? event.rawVelocity : 64\n\n  if (event.type === NOTE_OFF) {\n    if (notesMap[id]) {\n      notesMap[id].deleted = true\n    }\n\n    setTimeout(() => {\n      if (notesMap[id] && notesMap[id].deleted) {\n        delete notesMap[id]\n        ++last\n      }\n    }, 1200)\n\n    return\n  }\n\n  ++order\n\n  if (event.type === NOTE_ON) {\n    notesMap[id] = { event, number, value, deleted: false, order, id }\n\n    return\n  }\n\n  controlsMap[id] = { event, number, value, deleted: false, order, id, active: true }\n\n  setTimeout(() => {\n    if (controlsMap[id].event === event) {\n      controlsMap[id].active = false\n      ++last\n    }\n  }, 1200)\n\n  setTimeout(() => {\n    if (controlsMap[id].event === event) {\n      delete controlsMap[id]\n      ++last\n    }\n  }, 9600)\n}\n\nfunction hex (n) {\n  return `${n < 16 ? '0' : ''}${n.toString(16)}`\n}\n\nfunction dat ({ data }) {\n  return Array.from(data).map(hex).join(' ')\n}\n\nlet showMeta = true\nlet showMetaTimer = null\n\nfunction mouseMoveHandler () {\n  showMeta = true\n\n  if (showMetaTimer) {\n    clearTimeout(showMetaTimer)\n  }\n\n  showMetaTimer = setTimeout(() => {\n    showMeta = false\n    showMetaTimer = null\n  }, 8000)\n}\n\nmouseMoveHandler()\n\n</script>\n<style>\n:global(html, body) {\n  color: #fff;\n  background-color: #000;\n  margin: 0;\n  padding: 0;\n  font-family: sans-serif;\n}\n\n.x-messages {\n  position: absolute;\n  right: 0;\n  top: 0;\n  color: rgba(255, 255, 255, 0.75);\n  background-color: rgba(128, 128, 128, 0.28);\n  overflow: hidden;\n  padding: 12px;\n}\n\n.x-messages > div {\n  display: flex;\n}\n\n.x-messages > div > div {\n  padding: 4px;\n  overflow: hidden;\n  flex: 1 1 auto;\n  white-space: nowrap;\n}\n\n.x-messages > div > div:nth-child(3) {\n  flex: 0 1 64px;\n  text-align: right;\n  font-family: monospace;\n}\n\n.x-logs {\n  position: absolute;\n  width: 288px;\n  left: 0;\n  top: 0;\n  color: rgba(255, 255, 255, 0.75);\n  background-color: rgba(128, 128, 128, 0.28);\n  overflow: hidden;\n  padding: 12px;\n}\n\n.x-logs > div {\n  display: flex;\n}\n\n.x-logs > div > div {\n  margin: 4px;\n  overflow: hidden;\n  flex: 1 1 40%;\n}\n\n.x-logs > div > div:nth-child(3) {\n  flex: 1 0 auto;\n  min-width: 0;\n  text-align: right;\n  white-space: nowrap;\n}\n\n.notes {\n  position: absolute;\n  top: calc(50vh - 248px + 48px + 16px);\n}\n\n.controls {\n  position: absolute;\n  bottom: 0;\n}\n</style>\n<svelte:window bind:innerWidth={width}/>\n<svelte:body on:mousemove={mouseMoveHandler}/>\n<div class=\"notes\">\n  <Notes {width} {last} map={notesMap} {palette}/>\n</div>\n<div class=\"controls\">\n  <Controls map={controlsMap} {width} palette={paletteControls} {last}/>\n</div>\n{#if showMeta}\n  <div class=\"x-messages\">\n      {#each messages.slice(Math.max(0, messages.length - 16)) as m, index (index)}\n        <div>\n          <div>{m.event.target.id}</div>\n          <div>{m.event.channel}</div>\n          <div>{dat(m.event)}</div>\n        </div>\n      {/each}\n  </div>\n  <div class=\"x-logs\">\n      {#each logs.slice(Math.max(0, logs.length - 16)) as item, index (index)}\n        <div>\n            {#each item as cell, index (index)}\n              <div>{cell}</div>\n            {/each}\n        </div>\n      {/each}\n  </div>\n{/if}\n",
    "<script>\r\nimport { spring } from 'svelte/motion'\r\n\r\nexport let id\r\nexport let x\r\nexport let y\r\nexport let size\r\nexport let color\r\nexport let deleted\r\nexport let low\r\n\r\nlet springX = spring(x, { stiffness: 0.06, damping: 0.5, precision: 1 })\r\nlet springY = spring(y, { stiffness: 0.1, damping: 0.25, precision: 0.1 })\r\nlet sizeSpring = spring(size, { stiffness: 0.025, damping: 1, precision: 1 })\r\n\r\n$: springX.set(x)\r\n$: springY.set(y + deleted ? low : 0)\r\n$: sizeSpring.set(size)\r\n\r\n$: if (deleted) {\r\n  // color = '#000'\r\n  sizeSpring.set(0)\r\n}\r\n</script>\r\n\r\n<g fill={color} transform=\"translate({[$springX, $springY]})\" data-id={id}>\r\n  <circle r={Math.max(0, $sizeSpring)}/>\r\n</g>\r\n\r\n<style>\r\ng {\r\n  transition: fill 200ms linear;\r\n  will-change: transform, color;\r\n}\r\n</style>\r\n",
    "<script>\r\nimport { spring } from 'svelte/motion'\r\nimport { tweened } from 'svelte/motion'\r\nimport { linear } from 'svelte/easing'\r\n\r\nimport { arc } from 'd3-shape'\r\n\r\nexport let id\r\nexport let x\r\nexport let y\r\nexport let value\r\nexport let color\r\nexport let active\r\nexport let sizeInactive = [32, 24, 8]\r\nexport let size = [48, 32, 16]\r\n\r\nconst x_ = spring(x, { stiffness: 0.06, damping: 0.5, precision: 1 })\r\nconst y_ = spring(y, { stiffness: 0.1, damping: 0.25, precision: 0.1 })\r\nconst value_ = tweened(value, { duration: 0, easing: linear })\r\nconst outer_ = tweened(size[0], { duration: 200, easing: linear })\r\nconst inner_ = tweened(size[1], { duration: 200, easing: linear })\r\nconst dot_ = spring(size[2], { stiffness: 0.1, damping: 0.5, precision: 0.1 })\r\nconst arcGenerator = arc()\r\n\r\nlet path\r\n\r\n$: x_.set(x)\r\n$: y_.set(y)\r\n$: value_.set(value)\r\n$: outer_.set(active ? size[0] : sizeInactive[0])\r\n$: inner_.set(active ? size[1] : sizeInactive[1])\r\n$: dot_.set(active ? size[2] : sizeInactive[2])\r\n\r\n$: path = arcGenerator({\r\n  innerRadius: $inner_,\r\n  outerRadius: $outer_,\r\n  startAngle: -Math.PI,\r\n  endAngle: 2 * Math.PI * ($value_ / 127) - Math.PI\r\n})\r\n</script>\r\n\r\n<g fill={color} transform=\"translate({[$x_, $y_]})\" data-id={id}>\r\n  <circle r={$dot_}/>\r\n  <path d={path}/>\r\n</g>\r\n\r\n<style>\r\ng {\r\n  transition: fill 200ms linear;\r\n  will-change: transform, color;\r\n}\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "AAuGQ,UAAU,AAAE,CAAC,AACnB,KAAK,CAAE,IAAI,CACX,gBAAgB,CAAE,IAAI,CACtB,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACV,WAAW,CAAE,UAAU,AACzB,CAAC,AAED,WAAW,eAAC,CAAC,AACX,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,CAAC,CACR,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAChC,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAC3C,QAAQ,CAAE,MAAM,CAChB,OAAO,CAAE,IAAI,AACf,CAAC,AAED,0BAAW,CAAG,GAAG,eAAC,CAAC,AACjB,OAAO,CAAE,IAAI,AACf,CAAC,AAED,0BAAW,CAAG,kBAAG,CAAG,GAAG,eAAC,CAAC,AACvB,OAAO,CAAE,GAAG,CACZ,QAAQ,CAAE,MAAM,CAChB,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CACd,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,0BAAW,CAAG,kBAAG,CAAG,kBAAG,WAAW,CAAC,CAAC,AAAC,CAAC,AACpC,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CACd,UAAU,CAAE,KAAK,CACjB,WAAW,CAAE,SAAS,AACxB,CAAC,AAED,OAAO,eAAC,CAAC,AACP,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,KAAK,CACZ,IAAI,CAAE,CAAC,CACP,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAChC,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAC3C,QAAQ,CAAE,MAAM,CAChB,OAAO,CAAE,IAAI,AACf,CAAC,AAED,sBAAO,CAAG,GAAG,eAAC,CAAC,AACb,OAAO,CAAE,IAAI,AACf,CAAC,AAED,sBAAO,CAAG,kBAAG,CAAG,GAAG,eAAC,CAAC,AACnB,MAAM,CAAE,GAAG,CACX,QAAQ,CAAE,MAAM,CAChB,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,AACf,CAAC,AAED,sBAAO,CAAG,kBAAG,CAAG,kBAAG,WAAW,CAAC,CAAC,AAAC,CAAC,AAChC,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CACd,SAAS,CAAE,CAAC,CACZ,UAAU,CAAE,KAAK,CACjB,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,MAAM,eAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,AACvC,CAAC,AAED,SAAS,eAAC,CAAC,AACT,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,CAAC,AACX,CAAC;AChJD,CAAC,eAAC,CAAC,AACD,UAAU,CAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAC7B,WAAW,CAAE,SAAS,CAAC,CAAC,KAAK,AAC/B,CAAC;ACcD,CAAC,eAAC,CAAC,AACD,UAAU,CAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAC7B,WAAW,CAAE,SAAS,CAAC,CAAC,KAAK,AAC/B,CAAC"
}